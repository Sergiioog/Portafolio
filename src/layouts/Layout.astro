---
interface Props {
	title: string;
}

const { title } = Astro.props;
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="assets/iconos/sergiologo.png" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>

	</head>
	<body>
		<div id="mouse-follower"></div>
		<slot />
	</body>
</html>
<style is:global>
	body {
		background-color: transparent !important;
		background: radial-gradient(at center top, rgb(29, 78, 216), rgb(30, 64, 175), rgb(17, 24, 39))
		/*radial-gradient(at center top, rgb(219, 234, 254), rgb(147, 197, 253), rgb(59, 130, 246))*/
 
	}
	#mouse-follower {
		position: fixed;
		width: 10px;
		height: 10px;
		border-radius: 100%;
		background-color: rgb(255, 255, 255);
		pointer-events: none;
		transform: translate(-50%, -50%);
		transition: transform 0.2s, width 0.2s, height 0.2s;
		filter: blur(10px);
	}
	.container {
		background-color: transparent !important;
	}
	:root {
	--dark-color: hsl(var(--hue), 100%, 9%);
	--light-color: hsl(var(--hue), 95%, 98%);
	--base: hsl(var(--hue), 95%, 50%);
	--complimentary1: hsl(var(--hue-complimentary1), 95%, 50%);
	--complimentary2: hsl(var(--hue-complimentary2), 95%, 50%);

	--font-family: "Poppins", system-ui;

	--bg-gradient: linear-gradient(
		to bottom,
		hsl(var(--hue), 95%, 99%),
		hsl(var(--hue), 95%, 84%)
	);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background:#e8e8e8;
}

body {

  font-family: var(--font-family);
  color: var(--dark-color);
  /* background: var(--bg-gradient); */

}

.orb-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

strong {
  font-weight: 600;
}



a {
  text-decoration: none;
  color: var(--dark-color);
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}


/* Box sizing rules */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Remove default padding */
ul[class],
ol[class] {
	padding: 0;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
	margin: 0;
}

/* Set core body defaults */
body {
	min-height: 100vh;
	scroll-behavior: smooth;
	text-rendering: optimizeSpeed;
	line-height: 1.5;
}

/* Remove list styles on ul, ol elements with a class attribute */
ul[class],
ol[class] {
	list-style: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
	text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img {
	max-width: 100%;
	display: block;
}

/* Natural flow and rhythm in articles by default */
article > * + * {
	margin-top: 1em;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
	font: inherit;
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
	* {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}
	
/* Not too many browser support this yet but it's good to add! */
@media (prefers-contrast: high) {
  .orb-canvas {
    display: none;
  }
}

@media only screen and (max-width: 1140px) {
  .overlay {
    padding: 8rem 4rem;
  }
}

@media only screen and (max-width: 840px) {


  .overlay {
    padding: 4rem;
    height: auto;
  }

  .overlay__title {
    font-size: 1.25rem;
    line-height: 2rem;
    margin-bottom: 1.5rem;
  }

  .overlay__description {
    font-size: 0.875rem;
    line-height: 1.5rem;
    margin-bottom: 2.5rem;
  }
}

@media only screen and (max-width: 600px) {
  .overlay {
    padding: 1.5rem;
  }

  .overlay__btns {
    flex-wrap: wrap;
  }

  .overlay__btn {
    width: 100%;
    font-size: 0.75rem;
    margin-right: 0;
  }

  .overlay__btn:first-child {
    margin-bottom: 1rem;
  }
}
		

</style>
<script>
	document.addEventListener('mousemove', (e) => {
	const mouseFollower = document.getElementById('mouse-follower');
	mouseFollower.style.left = e.pageX + 'px';
	mouseFollower.style.top = e.pageY + 'px';
});

</script>
